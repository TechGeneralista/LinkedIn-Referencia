using Common.NotifyProperty;


namespace Common.Language
{
    public partial class LanguageDC
    {
        public IReadOnlyProperty<string> ApplicationStarted { get; } = new Property<string>();
        public IReadOnlyProperty<string> LanguageColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSource { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageOptimization { get; } = new Property<string>();
        public IReadOnlyProperty<string> Components { get; } = new Property<string>();
        public IReadOnlyProperty<string> Settings { get; } = new Property<string>();
        public IReadOnlyProperty<string> ApplicationSettingsColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ViewerColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TriggerColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> StartOnce { get; } = new Property<string>();
        public IReadOnlyProperty<string> Continous { get; } = new Property<string>();
        public IReadOnlyProperty<string> StartDelayColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> CycleTimeColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> DisableRefresh { get; } = new Property<string>();
        public IReadOnlyProperty<string> MessageColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> MessagesColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ViewLog { get; } = new Property<string>();
        public IReadOnlyProperty<string> InformationColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> WarningColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ErrorColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> PleaseWait { get; } = new Property<string>();
        public IReadOnlyProperty<string> Scan { get; } = new Property<string>();
        public IReadOnlyProperty<string> Connect { get; } = new Property<string>();
        public IReadOnlyProperty<string> Disconnect { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSourceSelectionColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Name { get; } = new Property<string>();
        public IReadOnlyProperty<string> Resolution { get; } = new Property<string>();
        public IReadOnlyProperty<string> OpticalDistortionCorrectionColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageAndCameraPropertiesColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ResetToDefaults { get; } = new Property<string>();
        public IReadOnlyProperty<string> Brightness { get; } = new Property<string>();
        public IReadOnlyProperty<string> Contrast { get; } = new Property<string>();
        public IReadOnlyProperty<string> Hue { get; } = new Property<string>();
        public IReadOnlyProperty<string> Saturation { get; } = new Property<string>();
        public IReadOnlyProperty<string> Sharpness { get; } = new Property<string>();
        public IReadOnlyProperty<string> Gamma { get; } = new Property<string>();
        public IReadOnlyProperty<string> ColorEnable { get; } = new Property<string>();
        public IReadOnlyProperty<string> WhiteBalance { get; } = new Property<string>();
        public IReadOnlyProperty<string> BacklightCompensation { get; } = new Property<string>();
        public IReadOnlyProperty<string> Gain { get; } = new Property<string>();
        public IReadOnlyProperty<string> Pan { get; } = new Property<string>();
        public IReadOnlyProperty<string> Tilt { get; } = new Property<string>();
        public IReadOnlyProperty<string> Roll { get; } = new Property<string>();
        public IReadOnlyProperty<string> Zoom { get; } = new Property<string>();
        public IReadOnlyProperty<string> Exposure { get; } = new Property<string>();
        public IReadOnlyProperty<string> Iris { get; } = new Property<string>();
        public IReadOnlyProperty<string> Focus { get; } = new Property<string>();
        public IReadOnlyProperty<string> Strength { get; } = new Property<string>();
        public IReadOnlyProperty<string> ComponentsColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> AddNew { get; } = new Property<string>();
        public IReadOnlyProperty<string> RemoveSelected { get; } = new Property<string>();
        public IReadOnlyProperty<string> RemoveAll { get; } = new Property<string>();
        public IReadOnlyProperty<string> IdColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ResultColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ContourFinderColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ReferenceImagesColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Refresh { get; } = new Property<string>();
        public IReadOnlyProperty<string> Sx { get; } = new Property<string>();
        public IReadOnlyProperty<string> Sy { get; } = new Property<string>();
        public IReadOnlyProperty<string> Ex { get; } = new Property<string>();
        public IReadOnlyProperty<string> Ey { get; } = new Property<string>();
        public IReadOnlyProperty<string> LColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Exchange { get; } = new Property<string>();
        public IReadOnlyProperty<string> Remove { get; } = new Property<string>();
        public IReadOnlyProperty<string> Edit { get; } = new Property<string>();
        public IReadOnlyProperty<string> Finish { get; } = new Property<string>();
        public IReadOnlyProperty<string> SampleCaptureColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> QuantityColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> DistanceColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ZRotateToleranceColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> MinusColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> PlusColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> SensitivityColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> MatchColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> MatchDataColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Index { get; } = new Property<string>();
        public IReadOnlyProperty<string> CenterX { get; } = new Property<string>();
        public IReadOnlyProperty<string> CenterY { get; } = new Property<string>();
        public IReadOnlyProperty<string> RotationAngle { get; } = new Property<string>();
        public IReadOnlyProperty<string> All0Colon { get; } = new Property<string>();
        public IReadOnlyProperty<string> All1Colon { get; } = new Property<string>();
        public IReadOnlyProperty<string> piece { get; } = new Property<string>();
        public IReadOnlyProperty<string> QuantityTolerance { get; } = new Property<string>();
        public IReadOnlyProperty<string> Minimum { get; } = new Property<string>();
        public IReadOnlyProperty<string> Maximum { get; } = new Property<string>();
        public IReadOnlyProperty<string> ResultInversion { get; } = new Property<string>();
        public IReadOnlyProperty<string> TCPServer { get; } = new Property<string>();
        public IReadOnlyProperty<string> IPAddressColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> PortColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Restart { get; } = new Property<string>();
        public IReadOnlyProperty<string> WaitingForClientToConnect { get; } = new Property<string>();
        public IReadOnlyProperty<string> ClientConnected { get; } = new Property<string>();
        public IReadOnlyProperty<string> ClientDisconnected { get; } = new Property<string>();
        public IReadOnlyProperty<string> InitializationSuccessful { get; } = new Property<string>();
        public IReadOnlyProperty<string> Program { get; } = new Property<string>();
        public IReadOnlyProperty<string> Open { get; } = new Property<string>();
        public IReadOnlyProperty<string> Save { get; } = new Property<string>();
        public IReadOnlyProperty<string> ContourPathsColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> NextShapeColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> StColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Line { get; } = new Property<string>();
        public IReadOnlyProperty<string> Apply { get; } = new Property<string>();
        public IReadOnlyProperty<string> DetectionTimeColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TestOnReferenceImage { get; } = new Property<string>();
        public IReadOnlyProperty<string> ObjectDetecionColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ContourScan { get; } = new Property<string>();
        public IReadOnlyProperty<string> Modules { get; } = new Property<string>();
        public IReadOnlyProperty<string> Counter { get; } = new Property<string>();
        public IReadOnlyProperty<string> AddModuleColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ModulesColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Add { get; } = new Property<string>();
        public IReadOnlyProperty<string> And { get; } = new Property<string>();
        public IReadOnlyProperty<string> Or { get; } = new Property<string>();
        public IReadOnlyProperty<string> LogicalEvaluation { get; } = new Property<string>();
        public IReadOnlyProperty<string> LogicalOperationColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> AbsX { get; } = new Property<string>();
        public IReadOnlyProperty<string> AbsY { get; } = new Property<string>();
        public IReadOnlyProperty<string> RelX { get; } = new Property<string>();
        public IReadOnlyProperty<string> RelY { get; } = new Property<string>();
        public IReadOnlyProperty<string> DetectionColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ModuleIdColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> AddModule { get; } = new Property<string>();
        public IReadOnlyProperty<string> AddGroup { get; } = new Property<string>();
        public IReadOnlyProperty<string> AddElement { get; } = new Property<string>();
        public IReadOnlyProperty<string> InstanceColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ReadingFile { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSourceDeviceNotSelectedOrNotConnected { get; } = new Property<string>();
        public IReadOnlyProperty<string> SaveProgramColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> LoadProgramColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> SaveSettings { get; } = new Property<string>();
        public IReadOnlyProperty<string> LoadSettings { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSourceDeviceNotFoundColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> SuccessfulColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Initialization { get; } = new Property<string>();
        public IReadOnlyProperty<string> AutomaticLoadOnStart { get; } = new Property<string>();
        public IReadOnlyProperty<string> AutomaticLoadingStartedColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> FileNotExistColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> OpticalDistortionCorrection { get; } = new Property<string>();
        public IReadOnlyProperty<string> TypeOfShapeColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TheApplicationCannotBeStartedOpenCLSupportedDeviceNotFound { get; } = new Property<string>();
        public IReadOnlyProperty<string> Browse { get; } = new Property<string>();
        public IReadOnlyProperty<string> Enabled { get; } = new Property<string>();
        public IReadOnlyProperty<string> LengthColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> LinesColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> IdCannotBeEmpty { get; } = new Property<string>();
        public IReadOnlyProperty<string> IdCanOnlyContainASCIICharacters { get; } = new Property<string>();
        public IReadOnlyProperty<string> UVCDeviceScanner { get; } = new Property<string>();
        public IReadOnlyProperty<string> AvailableImageSources { get; } = new Property<string>();
        public IReadOnlyProperty<string> ScanUVCDevices { get; } = new Property<string>();
        public IReadOnlyProperty<string> SelectedImageSources { get; } = new Property<string>();
        public IReadOnlyProperty<string> Type { get; } = new Property<string>();
        public IReadOnlyProperty<string> FrameRate { get; } = new Property<string>();
        public IReadOnlyProperty<string> Location { get; } = new Property<string>();
        public IReadOnlyProperty<string> Address { get; } = new Property<string>();
        public IReadOnlyProperty<string> Preview { get; } = new Property<string>();
        public IReadOnlyProperty<string> Inspection { get; } = new Property<string>();
        public IReadOnlyProperty<string> Inspections { get; } = new Property<string>();
        public IReadOnlyProperty<string> Id { get; } = new Property<string>();
        public IReadOnlyProperty<string> Result { get; } = new Property<string>();
        public IReadOnlyProperty<string> IdCannotContainSpaces { get; } = new Property<string>();
        public IReadOnlyProperty<string> Evaluation { get; } = new Property<string>();
        public IReadOnlyProperty<string> ReadFileColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> WriteFileColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> SettingFileColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ConnectedClients { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSources { get; } = new Property<string>();
        public IReadOnlyProperty<string> HardwareAccelerationColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSourceDevices { get; } = new Property<string>();
        public IReadOnlyProperty<string> ElementIdColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSourceDeviceScanners { get; } = new Property<string>();
        public IReadOnlyProperty<string> Start { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageSourceDevice { get; } = new Property<string>();
        public IReadOnlyProperty<string> ActiveImageSourceDevices { get; } = new Property<string>();
        public IReadOnlyProperty<string> Stop { get; } = new Property<string>();
        public IReadOnlyProperty<string> Information { get; } = new Property<string>();
        public IReadOnlyProperty<string> Warning { get; } = new Property<string>();
        public IReadOnlyProperty<string> Error { get; } = new Property<string>();
        public IReadOnlyProperty<string> Successful { get; } = new Property<string>();
        public IReadOnlyProperty<string> RotationTransformations { get; } = new Property<string>();
        public IReadOnlyProperty<string> CounterModule { get; } = new Property<string>();
        public IReadOnlyProperty<string> AreYouSureYouWantToDeleteThemAll { get; } = new Property<string>();
        public IReadOnlyProperty<string> QuestionColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TCPServerInitialize { get; } = new Property<string>();
        public IReadOnlyProperty<string> FileVersionColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> SaveResults { get; } = new Property<string>();
        public IReadOnlyProperty<string> OpenFolder { get; } = new Property<string>();
        public IReadOnlyProperty<string> FreeSpace { get; } = new Property<string>();
        public IReadOnlyProperty<string> ImageQuality { get; } = new Property<string>();
        public IReadOnlyProperty<string> SaveOkImage { get; } = new Property<string>();
        public IReadOnlyProperty<string> SaveNokImage { get; } = new Property<string>();
        public IReadOnlyProperty<string> FreeColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> UsedColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TotalColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> DataSourceColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> LoadingPPP { get; } = new Property<string>();
        public IReadOnlyProperty<string> ZoomColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> Filter { get; } = new Property<string>();
        public IReadOnlyProperty<string> FromColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> ToColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TextColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> FirstPleaseSelectADataSource { get; } = new Property<string>();
        public IReadOnlyProperty<string> ApplicationInstallerLowerCase { get; } = new Property<string>();
        public IReadOnlyProperty<string> PleaseSelectYourLanguageColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> InstallerWelcome { get; } = new Property<string>();
        public IReadOnlyProperty<string> Next { get; } = new Property<string>();
        public IReadOnlyProperty<string> Back { get; } = new Property<string>();
        public IReadOnlyProperty<string> SelectAnApplicationColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> SelectTheVersionOfApplicationColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TypeYourLicenceKeyColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> IfYouNotHaveOneLeaveEmptyIt { get; } = new Property<string>();
        public IReadOnlyProperty<string> ByInstallingOrUsingThisProductYouAgreeToItsColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> PrivacyPolicy { get; } = new Property<string>();
        public IReadOnlyProperty<string> ApplicationsAndToolsColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> EndUserLicenseAgreement { get; } = new Property<string>();
        public IReadOnlyProperty<string> PleaseSelectMainAndOrToolApplicationToContinue { get; } = new Property<string>();
        public IReadOnlyProperty<string> EnterYourLicenseKeyColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> KeyFormatIsIncorrect { get; } = new Property<string>();
        public IReadOnlyProperty<string> TheInstallationIsCompleted { get; } = new Property<string>();
        public IReadOnlyProperty<string> Finished { get; } = new Property<string>();
        public IReadOnlyProperty<string> TheFolderAlreadyExistsColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> FileDownloadColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> CreateShortcut { get; } = new Property<string>();
        public IReadOnlyProperty<string> CantConnectToServer { get; } = new Property<string>();
        public IReadOnlyProperty<string> CantLoginToServer { get; } = new Property<string>();
        public IReadOnlyProperty<string> TrialVersion { get; } = new Property<string>();
        public IReadOnlyProperty<string> DaysLeft { get; } = new Property<string>();
        public IReadOnlyProperty<string> TheTrialVersionIsExpired { get; } = new Property<string>();
        public IReadOnlyProperty<string> ActivationColon { get; } = new Property<string>();
        public IReadOnlyProperty<string> TheKeyIsNotValid { get; } = new Property<string>();
        public IReadOnlyProperty<string> TheKeyIsExpired { get; } = new Property<string>();
        public IReadOnlyProperty<string> SubscriptionIsActive { get; } = new Property<string>();
        public IReadOnlyProperty<string> Eternal { get; } = new Property<string>();
        public IReadOnlyProperty<string> LicenseValidatorClientConnected { get; } = new Property<string>();
        public IReadOnlyProperty<string> LicenseValidatorClientDisconnected { get; } = new Property<string>();
        public IReadOnlyProperty<string> LicenseValidatorClientLoggedIn { get; } = new Property<string>();
        public IReadOnlyProperty<string> LicenseValidatorClientLoggedOut { get; } = new Property<string>();
        public IReadOnlyProperty<string> MultipleInstanceRunError { get; } = new Property<string>();
        public IReadOnlyProperty<string> IfTheFieldIsEmptyATrialVersionWillRun { get; } = new Property<string>();
        public IReadOnlyProperty<string> Trigger { get; } = new Property<string>();
        public IReadOnlyProperty<string> Delete { get; } = new Property<string>();
    }
}
