using Common.NotifyProperty;
using Common.Settings;
using System;


namespace Language
{
    public partial class LanguageDC
    {
        public LanguageItem[] AvailableLanguages { get; } = new LanguageItem[] { new LanguageItem("Eng", "English"), new LanguageItem("Hun", "Magyar") };
        public ISettableObservableProperty<int> SelectedLanguageIndex { get; }


        public LanguageDC(ISettingsCollection settingsCollection)
        {
            Action<int, int> currentValueChangedAction = new Action<int, int>((o, n) => SelectedLanguageIndex_CurrentValueChanged(n));
            SelectedLanguageIndex = new StorableObservableProperty<int>(0, currentValueChangedAction, settingsCollection, nameof(LanguageDC), nameof(SelectedLanguageIndex));
        }

        private void SelectedLanguageIndex_CurrentValueChanged(int n)
        {
            switch(n)
            {
                case 0:
                    ApplicationStarted.ForceSet("Application started");
                    LanguageColon.ForceSet("Language:");
                    ImageSource.ForceSet("Image source");
                    ImageOptimization.ForceSet("Image optimization");
                    Components.ForceSet("Components");
                    Settings.ForceSet("Settings");
                    ApplicationSettingsColon.ForceSet("Application settings:");
                    ViewerColon.ForceSet("Viewer:");
                    TriggerColon.ForceSet("Trigger:");
                    StartOnce.ForceSet("Start once");
                    Continous.ForceSet("Continous");
                    StartDelayColon.ForceSet("Start delay:");
                    CycleTimeColon.ForceSet("Cycle time:");
                    DisableRefresh.ForceSet("Disable refresh");
                    MessageColon.ForceSet("Message:");
                    MessagesColon.ForceSet("Messages:");
                    ViewLog.ForceSet("View log");
                    InformationColon.ForceSet("Information:");
                    WarningColon.ForceSet("Warning:");
                    ErrorColon.ForceSet("Error:");
                    PleaseWait.ForceSet("Please wait...");
                    Scan.ForceSet("Scan");
                    Connect.ForceSet("Connect");
                    Disconnect.ForceSet("Disconnect");
                    ImageSourceSelectionColon.ForceSet("Image source selection:");
                    Name.ForceSet("Name");
                    Resolution.ForceSet("Resolution");
                    OpticalDistortionCorrectionColon.ForceSet("Optical distortion correction:");
                    ImageAndCameraPropertiesColon.ForceSet("Image and camera properties:");
                    ResetToDefaults.ForceSet("Reset to defaults");
                    Brightness.ForceSet("Brightness");
                    Contrast.ForceSet("Contrast");
                    Hue.ForceSet("Hue");
                    Saturation.ForceSet("Saturation");
                    Sharpness.ForceSet("Sharpness");
                    Gamma.ForceSet("Gamma");
                    ColorEnable.ForceSet("Color enable");
                    WhiteBalance.ForceSet("Whitebalance");
                    BacklightCompensation.ForceSet("Backlight compensation");
                    Gain.ForceSet("Gain");
                    Pan.ForceSet("Pan");
                    Tilt.ForceSet("Tilt");
                    Roll.ForceSet("Roll");
                    Zoom.ForceSet("Zoom");
                    Exposure.ForceSet("Exposure");
                    Iris.ForceSet("Iris");
                    Focus.ForceSet("Focus");
                    Strength.ForceSet("Strength");
                    ComponentsColon.ForceSet("Components:");
                    AddNew.ForceSet("Add new");
                    RemoveSelected.ForceSet("Remove selected");
                    RemoveAll.ForceSet("Remove all");
                    IdColon.ForceSet("Id:");
                    ResultColon.ForceSet("Result:");
                    ContourFinderColon.ForceSet("Contour finder:");
                    ReferenceImagesColon.ForceSet("Reference images:");
                    Refresh.ForceSet("Refresh");
                    Sx.ForceSet("Sx");
                    Sy.ForceSet("Sy");
                    Ex.ForceSet("Ex");
                    Ey.ForceSet("Ey");
                    LColon.ForceSet("L:");
                    Exchange.ForceSet("Exchange");
                    Remove.ForceSet("Remove");
                    Edit.ForceSet("Edit");
                    Finish.ForceSet("Finish");
                    SampleCaptureColon.ForceSet("Sample capture:");
                    QuantityColon.ForceSet("Quantity:");
                    DistanceColon.ForceSet("Distance:");
                    ZRotateToleranceColon.ForceSet("Z rotate tolerance:");
                    MinusColon.ForceSet("Minus:");
                    PlusColon.ForceSet("Plus:");
                    SensitivityColon.ForceSet("Sensitivity:");
                    MatchColon.ForceSet("Match:");
                    MatchDataColon.ForceSet("Match data:");
                    Index.ForceSet("Index");
                    CenterX.ForceSet("Center X");
                    CenterY.ForceSet("Center Y");
                    RotationAngle.ForceSet("Rotation angle");
                    All0Colon.ForceSet("All:");
                    All1Colon.ForceSet("All:");
                    piece.ForceSet("piece");
                    QuantityTolerance.ForceSet("Quantity tolerance");
                    Minimum.ForceSet("Minimum");
                    Maximum.ForceSet("Maximum");
                    ResultInversion.ForceSet("Result Inversion");
                    TCPServer.ForceSet("TCP server");
                    IPAddressColon.ForceSet("IP address:");
                    PortColon.ForceSet("Port:");
                    Restart.ForceSet("Restart");
                    WaitingForClientToConnect.ForceSet("Waiting for client to connect");
                    ClientConnected.ForceSet("Client connected");
                    ClientDisconnected.ForceSet("Client disconnected");
                    InitializationSuccessful.ForceSet("Initialization successful");
                    Program.ForceSet("Program");
                    Open.ForceSet("Load");
                    Save.ForceSet("Save");
                    ContourPathsColon.ForceSet("Contour paths:");
                    NextShapeColon.ForceSet("Next shape:");
                    StColon.ForceSet("St:");
                    Line.ForceSet("Line");
                    Apply.ForceSet("Apply");
                    DetectionTimeColon.ForceSet("Detection time:");
                    TestOnReferenceImage.ForceSet("Test on reference image");
                    ObjectDetecionColon.ForceSet("Object detection:");

                    // 2020.11.29
                    ContourScan.ForceSet("Contour scan");
                    Modules.ForceSet("Modules");
                    Counter.ForceSet("Counter");
                    AddModuleColon.ForceSet("Add module:");
                    ModulesColon.ForceSet("Modules:");
                    Add.ForceSet("Add");
                    And.ForceSet("And");
                    Or.ForceSet("Or");
                    LogicalEvaluation.ForceSet("Logical evaluation");
                    LogicalOperationColon.ForceSet("Logical operation:");
                    AbsX.ForceSet("Abs X");
                    AbsY.ForceSet("Abs Y");
                    RelX.ForceSet("Rel X");
                    RelY.ForceSet("Rel Y");
                    DetectionColon.ForceSet("Detection:");
                    ModuleIdColon.ForceSet("Module id:");
                    AddModule.ForceSet("Add module");
                    AddGroup.ForceSet("Add group");
                    AddElement.ForceSet("Add element");
                    InstanceColon.ForceSet("Instance:");
                    ReadingFile.ForceSet("Reading file");
                    ImageSourceDeviceNotSelectedOrNotConnected.ForceSet("Image source device not selected or not connected");
                    SaveProgramColon.ForceSet("Save program:");
                    LoadProgramColon.ForceSet("Load program:");
                    SaveSettings.ForceSet("Save settings");
                    LoadSettings.ForceSet("Load settings");
                    ImageSourceDeviceNotFoundColon.ForceSet("Image source device not found:");
                    SuccessfulColon.ForceSet("Successful:");
                    Initialization.ForceSet("Initialization");
                    AutomaticLoadOnStart.ForceSet("Automatic load on start");
                    AutomaticLoadingStartedColon.ForceSet("Automatic loading started:");
                    FileNotExistColon.ForceSet("File not exist:");
                    OpticalDistortionCorrection.ForceSet("Optical distortion correction");
                    TypeOfShapeColon.ForceSet("Type of shape:");
                    TheApplicationCannotBeStartedOpenCLSupportedDeviceNotFound.ForceSet("The application cannot be started, OpenCL supported device not found");
                    Browse.ForceSet("Browse");
                    Enabled.ForceSet("Enabled");

                    // 2020.12.20
                    LengthColon.ForceSet("Length:");
                    LinesColon.ForceSet("Lines:");
                    IdCannotBeEmpty.ForceSet("Id cannot be empty");
                    IdCanOnlyContainASCIICharacters.ForceSet("Id can coly contain ASCII characters");
                    UVCDeviceScanner.ForceSet("UVC device scanner");
                    AvailableImageSources.ForceSet("Available image sources");
                    ScanUVCDevices.ForceSet("Scan UVC devices");
                    SelectedImageSources.ForceSet("Selected image sources");
                    Type.ForceSet("Type");
                    FrameRate.ForceSet("Frame rate");
                    Location.ForceSet("Location");
                    Address.ForceSet("Address");
                    Preview.ForceSet("Preview");
                    Inspection.ForceSet("Inspection");
                    Inspections.ForceSet("Inspections");
                    Id.ForceSet("Id");
                    Result.ForceSet("Result");
                    IdCannotContainSpaces.ForceSet("Id cannot contain spaces");
                    Evaluation.ForceSet("Evaluation");
                    ReadFileColon.ForceSet("Read file:");
                    WriteFileColon.ForceSet("Write file:");
                    SettingFileColon.ForceSet("Setting file:");
                    ConnectedClients.ForceSet("Connected clients");

                    break;

                case 1:
                    ApplicationStarted.ForceSet("Az alkalmazás elindult");
                    LanguageColon.ForceSet("Nyelv:");
                    ImageSource.ForceSet("Kép forrás");
                    ImageOptimization.ForceSet("Kép optimalizálás");
                    Components.ForceSet("Komponensek");
                    Settings.ForceSet("Beállítások");
                    ApplicationSettingsColon.ForceSet("Alkalmazás beállításai:");
                    ViewerColon.ForceSet("Nézőke:");
                    TriggerColon.ForceSet("Indító jel:");
                    StartOnce.ForceSet("Egyszeri indítás");
                    Continous.ForceSet("Folytonos");
                    StartDelayColon.ForceSet("Indítási késleltetés:");
                    CycleTimeColon.ForceSet("Ciklus idő:");
                    DisableRefresh.ForceSet("Frissítés tiltása");
                    MessageColon.ForceSet("Üzenet:");
                    MessagesColon.ForceSet("Üzenetek:");
                    ViewLog.ForceSet("Napló megnyitása");
                    InformationColon.ForceSet("Információ:");
                    WarningColon.ForceSet("Figyelmeztetés:");
                    ErrorColon.ForceSet("Hiba:");
                    PleaseWait.ForceSet("Kis türelmet...");
                    Scan.ForceSet("Keresés");
                    Connect.ForceSet("Kapcsolódás");
                    Disconnect.ForceSet("Leválasztás");
                    ImageSourceSelectionColon.ForceSet("Kép forrás kiválasztása:");
                    Name.ForceSet("Név");
                    Resolution.ForceSet("Felbontás");
                    OpticalDistortionCorrectionColon.ForceSet("Optikai torzítás korrekció:");
                    ImageAndCameraPropertiesColon.ForceSet("Kép és kamera tulajdonságok:");
                    ResetToDefaults.ForceSet("Visszaállítás alaphelyzetbe");
                    Brightness.ForceSet("Fényerő");
                    Contrast.ForceSet("Kontraszt");
                    Hue.ForceSet("Színárnyalat");
                    Saturation.ForceSet("Szín");
                    Sharpness.ForceSet("Zajszűrő");
                    Gamma.ForceSet("Gamma");
                    ColorEnable.ForceSet("Szín engedélyezés");
                    WhiteBalance.ForceSet("Fehéregyensúly");
                    BacklightCompensation.ForceSet("Háttérvilágítás kompenzáció");
                    Gain.ForceSet("Erősítés");
                    Pan.ForceSet("Eltolás");
                    Tilt.ForceSet("Döntés");
                    Roll.ForceSet("Forgás");
                    Zoom.ForceSet("Nagyítás");
                    Exposure.ForceSet("Expozíció");
                    Iris.ForceSet("Írisz");
                    Focus.ForceSet("Fókusz");
                    Strength.ForceSet("Erősség");
                    ComponentsColon.ForceSet("Komponensek:");
                    AddNew.ForceSet("Új hozzáadása");
                    RemoveSelected.ForceSet("Kijelölt eltávolítása");
                    RemoveAll.ForceSet("Mind eltávolítása");
                    IdColon.ForceSet("Azonosító:");
                    ResultColon.ForceSet("Eredmény:");
                    ContourFinderColon.ForceSet("Kontúr kereső:");
                    ReferenceImagesColon.ForceSet("Referencia képek:");
                    Refresh.ForceSet("Frissítés");
                    Sx.ForceSet("Kx");
                    Sy.ForceSet("Ky");
                    Ex.ForceSet("Vx");
                    Ey.ForceSet("Vy");
                    LColon.ForceSet("H:");
                    Exchange.ForceSet("Csere");
                    Remove.ForceSet("Törlés");
                    Edit.ForceSet("Szerkesztés");
                    Finish.ForceSet("Kész");
                    SampleCaptureColon.ForceSet("Mintavételezés:");
                    QuantityColon.ForceSet("Mennyiség:");
                    DistanceColon.ForceSet("Távolság:");
                    ZRotateToleranceColon.ForceSet("Z forgás tolerancia:");
                    MinusColon.ForceSet("Mínusz:");
                    PlusColon.ForceSet("Plusz:");
                    SensitivityColon.ForceSet("Érzékenység:");
                    MatchColon.ForceSet("Egyezés:");
                    MatchDataColon.ForceSet("Találatok adatai:");
                    Index.ForceSet("Index");
                    CenterX.ForceSet("Középpont X");
                    CenterY.ForceSet("Középpont Y");
                    RotationAngle.ForceSet("Elfordulási szög");
                    All0Colon.ForceSet("Összes:");
                    All1Colon.ForceSet("Összesen:");
                    piece.ForceSet("darab");
                    QuantityTolerance.ForceSet("Mennyiség tűrés");
                    Minimum.ForceSet("Minimum");
                    Maximum.ForceSet("Maximum");
                    ResultInversion.ForceSet("Eredmény invertálás");
                    TCPServer.ForceSet("TCP szerver");
                    IPAddressColon.ForceSet("IP cím:");
                    PortColon.ForceSet("Port:");
                    Restart.ForceSet("Újraindítás");
                    WaitingForClientToConnect.ForceSet("Várakozás a kliens kapcsolódására");
                    ClientConnected.ForceSet("Kliens kapcsolódott");
                    ClientDisconnected.ForceSet("Kliens szétkapcsolt");
                    InitializationSuccessful.ForceSet("Inicializálás sikeres");
                    Program.ForceSet("Program");
                    Open.ForceSet("Betöltés");
                    Save.ForceSet("Mentés");
                    ContourPathsColon.ForceSet("Kontúr útvonalak:");
                    NextShapeColon.ForceSet("Következő alakzat:");
                    StColon.ForceSet("At:");
                    Line.ForceSet("Egyenes");
                    Apply.ForceSet("Alkalmaz");
                    DetectionTimeColon.ForceSet("Detektálási idő:");
                    TestOnReferenceImage.ForceSet("Teszt a referencia képen");
                    ObjectDetecionColon.ForceSet("Objektum detektálás:");

                    // 2020.11.29
                    ContourScan.ForceSet("Kontúr letapogatás");
                    Modules.ForceSet("Modulok");
                    Counter.ForceSet("Számláló");
                    AddModuleColon.ForceSet("Modul hozzáadása:");
                    ModulesColon.ForceSet("Modulok:");
                    Add.ForceSet("Hozzáadás");
                    And.ForceSet("És");
                    Or.ForceSet("Vagy");
                    LogicalEvaluation.ForceSet("Logikai kiértékelés");
                    LogicalOperationColon.ForceSet("Logikai művelet:");
                    AbsX.ForceSet("Abs X");
                    AbsY.ForceSet("Abs Y");
                    RelX.ForceSet("Rel X");
                    RelY.ForceSet("Rel Y");
                    DetectionColon.ForceSet("Detektálás:");
                    ModuleIdColon.ForceSet("Modul azonosító:");
                    AddModule.ForceSet("Modul hozzáadása");
                    AddGroup.ForceSet("Csoport hozzáadása");
                    AddElement.ForceSet("Elem hozzáadása");
                    InstanceColon.ForceSet("Példány:");
                    ReadingFile.ForceSet("Fájl olvasás");
                    ImageSourceDeviceNotSelectedOrNotConnected.ForceSet("Kép forrás eszköz nincs kiválasztva vagy nincs csatlakoztatva");
                    SaveProgramColon.ForceSet("Program mentés:");
                    LoadProgramColon.ForceSet("Program betöltés:");
                    SaveSettings.ForceSet("Beállítások mentése");
                    LoadSettings.ForceSet("Beállítások betöltése");
                    ImageSourceDeviceNotFoundColon.ForceSet("Kép forrás eszköz nem található:");
                    SuccessfulColon.ForceSet("Sikeres:");
                    Initialization.ForceSet("Inicializálás");
                    AutomaticLoadOnStart.ForceSet("Automatikus betöltés induláskor");
                    AutomaticLoadingStartedColon.ForceSet("Automatikus betöltés elindult:");
                    FileNotExistColon.ForceSet("A fájl nem létezik:");
                    OpticalDistortionCorrection.ForceSet("Optikai torzítás korrekció");
                    TypeOfShapeColon.ForceSet("Alakzat típusa:");
                    TheApplicationCannotBeStartedOpenCLSupportedDeviceNotFound.ForceSet("Az alkalmazás nem indítható el mert nem található OpenCL-t támogató eszköz");
                    Browse.ForceSet("Tallózás");
                    Enabled.ForceSet("Engedélyezve");

                    // 2020.12.20
                    LengthColon.ForceSet("Hossz:");
                    LinesColon.ForceSet("Egyenesek:");
                    IdCannotBeEmpty.ForceSet("Az azonosító nem lehet üres");
                    IdCanOnlyContainASCIICharacters.ForceSet("Az azonosító csak ASCII karaktereket tartalmazhat");
                    UVCDeviceScanner.ForceSet("UVC eszköz keresés");
                    AvailableImageSources.ForceSet("Rendelkezésre álló kép források");
                    ScanUVCDevices.ForceSet("UVC eszközök keresése");
                    SelectedImageSources.ForceSet("Kiválasztott kép források");
                    Type.ForceSet("Típus");
                    FrameRate.ForceSet("Képkocka sebesség");
                    Location.ForceSet("Hely");
                    Address.ForceSet("Cím");
                    Preview.ForceSet("Előnézet");
                    Inspection.ForceSet("Ellenőrzés");
                    Inspections.ForceSet("Inspections");
                    Id.ForceSet("Azonosító");
                    Result.ForceSet("Eredmény");
                    IdCannotContainSpaces.ForceSet("Az azonosító nem tartalmazhat szóközöket");
                    Evaluation.ForceSet("Kiértékelés");
                    ReadFileColon.ForceSet("Fájl olvasás:");
                    WriteFileColon.ForceSet("Fájl írás:");
                    SettingFileColon.ForceSet("Beállítás fájl:");
                    ConnectedClients.ForceSet("Csatlakozott kliensek");

                    break;
            }
        }
    }
}
